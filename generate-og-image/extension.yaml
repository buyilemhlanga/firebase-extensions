name: generate-og-image
version: 0.0.7
specVersion: v1beta

displayName: Dynamic OG Image Generator

description: >-
  Generates dynamic and fully customizable social media images for your website.

icon: icon.png

tags: [utilities]

license: Apache-2.0

author:
  authorName: Yaman Katby
  email: me@yamankatby.com
  url: https://github.com/yamankatby

contributors:
  - authorName: Sandrina
    url: https://sandrina.framer.website

sourceUrl: https://github.com/yamankatby/firebase-extensions/tree/main/generate-og-image

billingRequired: false

roles:
  - role: datastore.user
    reason: Allows this extension to access Cloud Firestore to read the templates collection.

resources:
  - name: api
    type: firebaseextensions.v1beta.function
    description: >-
      HTTP request-triggered function that responds with the generated OG image.
    properties:
      location: ${param:LOCATION}
      httpsTrigger: {}
      runtime: nodejs14
      availableMemoryMb: ${param:FUNCTION_MEMORY}

  - name: onInstall
    type: firebaseextensions.v1beta.function
    description: >-
      Automatically creates an example template document in the templates
      collection after installation.
    properties:
      location: ${param:LOCATION}
      taskQueueTrigger: {}

params:
  - param: LOCATION
    label: Cloud Functions location
    description: >-
      Where do you want to deploy the functions created for this extension?
      For help selecting a location, refer to the [location selection
      guide](https://firebase.google.com/docs/functions/locations).
    type: select
    options:
      - label: Iowa (us-central1)
        value: us-central1
      - label: South Carolina (us-east1)
        value: us-east1
      - label: Northern Virginia (us-east4)
        value: us-east4
      - label: Los Angeles (us-west2)
        value: us-west2
      - label: Salt Lake City (us-west3)
        value: us-west3
      - label: Las Vegas (us-west4)
        value: us-west4
      - label: Warsaw (europe-central2)
        value: europe-central2
      - label: Belgium (europe-west1)
        value: europe-west1
      - label: London (europe-west2)
        value: europe-west2
      - label: Frankfurt (europe-west3)
        value: europe-west3
      - label: Zurich (europe-west6)
        value: europe-west6
      - label: Hong Kong (asia-east2)
        value: asia-east2
      - label: Tokyo (asia-northeast1)
        value: asia-northeast1
      - label: Osaka (asia-northeast2)
        value: asia-northeast2
      - label: Seoul (asia-northeast3)
        value: asia-northeast3
      - label: Mumbai (asia-south1)
        value: asia-south1
      - label: Jakarta (asia-southeast2)
        value: asia-southeast2
      - label: Montreal (northamerica-northeast1)
        value: northamerica-northeast1
      - label: Sao Paulo (southamerica-east1)
        value: southamerica-east1
      - label: Sydney (australia-southeast1)
        value: australia-southeast1
    required: true
    immutable: true

  - param: TEMPLATES_COLLECTION
    label: Templates collection
    description: >-
      The path to the Cloud Firestore collection where you would like to store
      the templates documents.
      The collection must have a document for each template, where the document
      id is the name of the template and the document contains a `template`
      field with the template string.
    type: string
    default: templates
    required: true

  - param: CREATE_EXAMPLE_TEMPLATE
    label: Create example template
    description: >-
      Do you want the extension to automatically create an example template 
      document in the templates collection after installation?
    type: select
    options:
      - label: Yes
        value: true
      - label: No
        value: false
    default: true
    required: true

  - param: CORS_ORIGIN
    label: Allowed CORS origins
    description: >-
      A comma-separated list of allowed CORS origins. Use `*` to allow all
      origins in development mode.
      This is useful to lock down the API and only allow your own websites to
      use it.
    type: string
    example: "extensions.work,extensions.web.app"
    default: "*"
    required: true

  - param: FUNCTION_MEMORY
    label: Cloud Function memory
    description: >-
      The amount of memory to allocate to the Cloud Function that generates the
      images.
    type: select
    options:
      - label: 512 MB
        value: 512
      - label: 1 GB
        value: 1024
      - label: 2 GB
        value: 2048
    default: 1024
    required: true
    immutable: false

lifecycleEvents:
  onInstall:
    function: onInstall
    processingMessage: >-
      Creating an example template document in the ${param:TEMPLATES_COLLECTION}
      collection...
